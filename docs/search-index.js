var searchIndex = JSON.parse('{\
"xmcs":{"doc":"","i":[[0,"substr","xmcs","Check whether a sequence is a subsequence of another",null,null],[3,"SubString","xmcs::substr","Struct used to precompute whether a sequence is a …",null,null],[11,"new","","Do the precomputations and returns a struct containing …",0,[[["usize",15]]]],[11,"is_substring_at","","Returns whether the tail of one of the string is a …",0,[[["usize",15]],["bool",15]]],[11,"is_substring_from_end","","Returns whether the tail of one of the sequence is a …",0,[[["usize",15]],["bool",15]]],[0,"set","xmcs","Basic implementation of the algorithm using sets (hash …",null,null],[5,"xmcsk","xmcs::set","Compute an extended set of maximal common subsequences of …",null,[[["usize",15]],[["hashset",3],["vec",3]]]],[5,"xmcs2","","Compute an extended set of maximal common subsequences of …",null,[[["usize",15]],[["hashset",3],["vec",3]]]],[11,"from","xmcs::substr","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"SubString"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);